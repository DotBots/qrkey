name: CI

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:

jobs:

  test:
    name: test (${{ matrix.os }}, python-${{ matrix.python-version }}, node-${{ matrix.node-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version: ["3.12"]
        node-version: ["20"]
        include:
          - os: ubuntu-latest
            python-version: "3.11"
            node-version: "18"
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up nodejs ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm install
      working-directory: ./qrkey/ui
    - run: npm run build
      working-directory: ./qrkey/ui
    - name: Install hatch
      run: python -m pip install --upgrade hatch
    - name: Check style
      run: hatch fmt --check
    - name: Check types
      run: hatch run types:check
    - name: Run tests
      run: hatch run test
    - name: Upload coverage to Codecov
      if: >-
        matrix.python-version == 3.12 &&
        matrix.node-version == 20
      uses: codecov/codecov-action@v4
      with:
        verbose: true

  js:
    name: check js module
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up nodejs
      uses: actions/setup-node@v4
      with:
        node-version: "20"
    - run: npm install
      working-directory: ./js
    - run: npm run build
      working-directory: ./js
    - name: Upload js library
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: js
        path: ./js/dist/*.js

  ui:
    name: check qrcode ui
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up nodejs
      uses: actions/setup-node@v4
      with:
        node-version: "20"
    - run: npm install
      working-directory: ./qrkey/ui
    - run: npm run test
      working-directory: ./qrkey/ui
    - run: npm run lint
      working-directory: ./qrkey/ui
    - run: npm run build
      working-directory: ./qrkey/ui
    - name: Upload ui build
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: ui
        path: ./qrkey/ui/build

  sdist:
    needs: [test, ui]
    name: build source package
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install hatch
      run: python -m pip install --upgrade hatch
    - name: Set up nodejs
      uses: actions/setup-node@v4
      with:
        node-version: "20"
    - name: Build package
      run: hatch build -t sdist
    - name: Upload source and wheel packages
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: sdist
        path: ./dist/*.tar.gz

  wheels:
    needs: [test, ui]
    name: build wheels
    if: github.event_name == 'push'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version: ["3.10", "3.11", "3.12"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install build dependencies
      run: python -m pip install --upgrade hatch
    - uses: actions/download-artifact@v4
      with:
        name: ui
        path: ./qrkey/ui/build
    - name: Build wheels
      run: hatch build -t wheel
    - name: Upload wheels as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ matrix.os }}-${{ matrix.python-version }}
        path: ./dist/*.whl

  release:
    needs: [sdist, wheels]
    name: publish release
    # if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./dist
    - name: Check dist/ content
      run: ls -lR ./dist
    - name: Install hatch
      run: python -m pip install --upgrade keyring hatch
    - name: Publish package to PyPI
      run: hatch publish -u ${{ secrets.PYPI_USER }} -a ${{ secrets.PYPI_TOKEN }} dist/wheels-* dist/*.tar.gz
    # - name: Release
    #   uses: ncipollo/release-action@v1
    #   with:
    #     generateReleaseNotes: true
    #     artifacts: "dist/*.tar.gz,dist/*.whl"
    #     token: ${{ secrets.RELEASE_TOKEN }}
